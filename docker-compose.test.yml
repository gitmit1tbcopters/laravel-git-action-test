name: laravel-git-action-test
services:
    laravel.test:
        container_name: laravel.test
        build:
            context: docker/8.4/test
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            WWWUSER: '${WWWUSER}'
            DB_NAME: 'mysql'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
             redis:
               condition: service_healthy
             mailpit:
               condition: service_healthy
             selenium:
               condition: service_healthy
             mysql:
               condition: service_healthy
             minio:
               condition: service_healthy
        healthcheck:
          test: [ "CMD", "curl", "-f", "http://localhost/up" ]
          interval: 10s
          timeout: 30s
          retries: 5
          start_period: 20s


    redis:
        container_name: redis
        image: 'redis:alpine'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
        restart: on-failure
    mailpit:
        container_name: mailpit
        image: 'axllent/mailpit:latest'
        networks:
            - sail
        healthcheck:
          test: [ "CMD", "/mailpit", "readyz" ]
          interval: 15s
          timeout: 10s
          retries: 3
          start_period: 5s
        restart: on-failure
    selenium:
        container_name: selenium
        image: selenium/standalone-chromium
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - '/dev/shm:/dev/shm'
        networks:
            - sail
        healthcheck:
          test: [ "CMD", "curl", "-f", "http://localhost:4444/wd/hub/status" ]
          interval: 30s
          timeout: 10s
          retries: 3
          start_period: 15s
        restart: on-failure
    mysql:
        container_name: mysql
        image: 'mysql:8.0'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - './docker/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "--password=${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
        restart: on-failure
    minio:
        container_name: minio
        image: 'minio/minio:latest'
        environment:
            MINIO_ROOT_USER: sail
            MINIO_ROOT_PASSWORD: password
        networks:
            - sail
        command: 'minio server /data --console-address ":8900"'
        healthcheck:
            test:
                - CMD
                - mc
                - ready
                - local
            retries: 3
            timeout: 5s
        restart: on-failure
networks:
    sail:
        driver: bridge
