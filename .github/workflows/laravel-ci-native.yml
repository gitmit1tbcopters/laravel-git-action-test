name: Laravel CI Git native

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:11
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
          MYSQL_USER: sail
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      mailpit:
        image: axllent/mailpit:latest
        ports:
          - 1025:1025
          - 8025:8025

      selenium:
        image: selenium/standalone-chromium
        ports:
          - 4444:4444

      minio:
        image: minio/minio:latest
        env:
          MINIO_ROOT_USER: sail
          MINIO_ROOT_PASSWORD: password
        ports:
          - 9000:9000
          - 8900:8900

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up PHP 8.4
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: >
          gd, curl, imap, mysql, mbstring, xml, zip,
          bcmath, soap, intl, readline, ldap, msgpack,
          igbinary, redis, memcached, pcov, imagick
        tools: composer
        coverage: none

    - name: Install Node.js 22
      uses: actions/setup-node@v3
      with:
        node-version: '22'

    - name: Install Dependencies
      run: |
        composer install --no-progress --prefer-dist --optimize-autoloader
        npm install
        npm run build

    - name: Set up Environment Variables
      run: cp .env.test .env

    - name: Wait for MariaDB to be healthy
      run: |
        for i in {1..10}; do
          if mysqladmin ping -h127.0.0.1 -P3306 --silent; then
            echo "MariaDB is healthy."
            break
          fi
          echo "Waiting for MariaDB to be healthy..."
          sleep 5
        done
        if ! mysqladmin ping -h127.0.0.1 -P3306 --silent; then
          echo "MariaDB failed to become healthy."
          exit 1
        fi

    - name: Set DB Host for GitHub Actions
      run: |
        echo "DB_HOST=127.0.0.1" >> .env

    - name: Generate Key
      run: php artisan key:generate

    - name: Clear Cahche
      run: php artisan optimize

    - name: Run Migrations
      run: php artisan migrate --force

    - name: Database Seeder
      run: php artisan db:seed

    - name: Run Tests
      run: php artisan test

    - name: Add Build Failed Tag and PR Comment
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const { data: existingLabels } = await github.issues.listLabelsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });

          // Check if "build_failed" tag exists, create if not
          if (!existingLabels.some(label => label.name === "build_failed")) {
            await github.issues.createLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "build_failed",
              color: "ff0000", // Red color
              description: "The build failed during the CI process",
            });
          }

          // Add the "build_failed" label to the pull request
          if (context.payload.pull_request) {
            await github.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: ["build_failed"],
            });

            // Add a comment to the pull request
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: "ðŸš¨ Build failed! A 'build_failed' label has been added to this pull request.",
            });
          }

    - name: Remove Build Failed Tag on Success
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          // Remove the "build_failed" label if it exists
          if (context.payload.pull_request) {
            const { data: labels } = await github.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
            });

            if (labels.some(label => label.name === "build_failed")) {
              await github.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                name: "build_failed",
              });
            }
          }
