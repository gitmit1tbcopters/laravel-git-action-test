name: Laravel CI Docker

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
permissions:
  issues: write
  pull-requests: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy .env.test to .env
        run: cp .env.test .env

      - name: Set up Docker Compose
        run: docker compose -f docker-compose.test.yml up --build -d

      - name: Wait for Laravel container to be healthy
        run: |
          echo "Waiting for laravel.test container to be healthy..."
          for i in {1..30}; do
            STATUS=$(docker inspect --format='{{json .State.Health.Status}}' laravel.test)
            if [ "$STATUS" = "\"healthy\"" ]; then
              echo "Container is healthy!"
              exit 0
            fi
            echo "Waiting for container... ($i/30)"
            sleep 5
          done
          echo "Container failed to become healthy in time."
          exit 1

      - name: Get Laravel container name
        id: laravel_container
        run: echo "CONTAINER_ID=$(docker ps --filter "name=laravel.test" --format "{{.Names}}")" >> $GITHUB_ENV

      - name: Run Tests
        run: docker exec $CONTAINER_ID php artisan test

      - name: Add Build Failed Tag and PR Comment
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            if (context.payload.pull_request) {
              const issue_number = context.payload.pull_request.number;

              // Ensure the "build_failed" label exists
              try {
                const { data: existingLabels } = await github.issues.listLabelsForRepo({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                });

                if (!existingLabels.some(label => label.name === "build_failed")) {
                  await github.issues.createLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: "build_failed",
                    color: "ff0000",
                    description: "The build failed during the CI process",
                  });
                }
              } catch (error) {
                console.error("Error ensuring label exists:", error);
              }

              // Add the "build_failed" label to the pull request
              try {
                await github.issues.addLabels({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number,
                  labels: ["build_failed"],
                });

                await github.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number,
                  body: "ðŸš¨ Build failed! A 'build_failed' label has been added to this pull request.",
                });
              } catch (error) {
                console.error("Error adding label or comment to pull request:", error);
              }
            } else {
              console.warn("No pull request context. Skipping label and comment addition.");
            }


      - name: Remove Build Failed Tag on Success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            if (context.payload.pull_request) {
              const issue_number = context.payload.pull_request.number;

              try {
                // Get labels for the pull request
                const { data: labels } = await github.issues.listLabelsOnIssue({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number,
                });

                // Check if "build_failed" exists and remove it
                if (labels.some(label => label.name === "build_failed")) {
                  await github.issues.removeLabel({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number,
                    name: "build_failed",
                  });
                }
              } catch (error) {
                console.error("Error removing 'build_failed' label:", error);
              }
            } else {
              console.warn("No pull request context. Skipping label removal.");
            }

