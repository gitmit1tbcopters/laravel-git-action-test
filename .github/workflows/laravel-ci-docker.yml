name: Laravel CI Docker

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy .env.test to .env
        run: cp .env.test .env

      - name: Set up Docker Compose
        run: docker compose -f docker-compose.test.yml up --build -d

      - name: Wait for Laravel container to be healthy
        run: |
          echo "Waiting for laravel.test container to be healthy..."
          for i in {1..30}; do
            STATUS=$(docker inspect --format='{{json .State.Health.Status}}' laravel.test)
            if [ "$STATUS" = "\"healthy\"" ]; then
              echo "Container is healthy!"
              exit 0
            fi
            echo "Waiting for container... ($i/30)"
            sleep 5
          done
          echo "Container failed to become healthy in time."
          exit 1

      - name: Get Laravel container name
        id: laravel_container
        run: echo "CONTAINER_ID=$(docker ps --filter "name=laravel.test" --format "{{.Names}}")" >> $GITHUB_ENV

      - name: Run Tests
        run: docker exec $CONTAINER_ID php artisan test

      - name: Add Build Failed Tag and PR Comment
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const { data: existingLabels } = await github.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            // Check if "build_failed" tag exists, create if not
            if (!existingLabels.some(label => label.name === "build_failed")) {
              await github.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: "build_failed",
                color: "ff0000", // Red color
                description: "The build failed during the CI process",
              });
            }

            // Add the "build_failed" label to the pull request
            if (context.payload.pull_request) {
              await github.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ["build_failed"],
              });

              // Add a comment to the pull request
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: "ðŸš¨ Build failed! A 'build_failed' label has been added to this pull request.",
              });
            }

      - name: Remove Build Failed Tag on Success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            // Remove the "build_failed" label if it exists
            if (context.payload.pull_request) {
              const { data: labels } = await github.issues.listLabelsOnIssue({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
              });

              if (labels.some(label => label.name === "build_failed")) {
                await github.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  name: "build_failed",
                });
              }
            }
